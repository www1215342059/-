C51 COMPILER V9.57.0.0   ST7789V                                                           01/20/2022 17:48:12 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ST7789V
OBJECT MODULE PLACED IN .\Objects\ST7789V.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE ..\APP\LCD\ST7789V.c COMPACT OPTIMIZE(8,SPEED) BROWSE INCDIR(..\APP;..\..\
                    -鞋柜主控;..\APP\ADC;..\APP\Eeprom;..\APP\Fingerprint;..\APP\System;..\APP\System;..\APP\Uart;..\APP\WIFI;..\APP\LCD;..\A
                    -PP\SPI;..\APP\GUI;..\APP\Time;..\APP\H) DEBUG OBJECTEXTEND PRINT(.\Listings\ST7789V.lst) TABS(2) OBJECT(.\Objects\ST7789
                    -V.obj)

line level    source

   1          #include "ST7789V.h"
   2          #include "SPI.h"
   3          SPI xdata LcdSpi;
   4          LCDIO xdata Lcd_Power = {LCD_BACK,LCD_POWER,LCD_RES};
   5          
   6          void Delay1ms()   //@33.1776MHz
   7          {
   8   1        unsigned char xdata i, j;
   9   1      
  10   1        _nop_();
  11   1        _nop_();
  12   1        i = 33;
  13   1        j = 66;
  14   1        do
  15   1        {
  16   2          while (--j);
  17   2        } while (--i);
  18   1      }
  19          
  20          void LCD_CS(uchar dat)
  21          {
  22   1        LCDCS = dat;
  23   1      }
  24          void LCD_MOSI(uchar dat)
  25          {
  26   1        LCDMOSI = dat;
  27   1      }
  28          void LCD_SCLK(uchar dat)
  29          {
  30   1        LCDSCLK = dat;
  31   1      }
  32          void LCD_BACK(enum LCD dat)
  33          {
  34   1        LCDBACK = dat;
  35   1      }
  36          void LCD_POWER(enum LCD dat)
  37          {
  38   1        LCDPOWER = dat;
  39   1      }
  40          void LCD_RES(enum LCD dat)
  41          {
  42   1        LCDRES = dat;
  43   1      }
  44          
  45          void LcdSpiInit()
  46          {
  47   1        LcdSpi.SpiIo.CS = LCD_CS;
  48   1        LcdSpi.SpiIo.MOSI = LCD_MOSI;
  49   1        LcdSpi.SpiIo.SCLK = LCD_SCLK;
  50   1        LcdSpi.SPIWrite = SpiWrite;
  51   1      }
  52          
C51 COMPILER V9.57.0.0   ST7789V                                                           01/20/2022 17:48:12 PAGE 2   

  53          void LCD_Write_Data(uchar dat)
  54          {
  55   1        LcdSpi.SPIWrite(&LcdSpi.SpiIo,dat);
  56   1      }
  57          
  58          void LCD_Write_Word(uint dat)//LCD写字
  59          {
  60   1        LCD_Write_Data(dat);
  61   1        LCD_Write_Data(dat>>8);
  62   1      }
  63          
  64          void LCD_Write_Cmd(uchar cmd)
  65          {
  66   1        LCD_DC = 0;
  67   1        LCD_Write_Data(cmd);
  68   1        LCD_DC = 1;
  69   1      }
  70          
  71          void LCD_Addr_Set(uint x1,uint y1,uint x2,uint y2)
  72          {
  73   1        LCD_Write_Cmd(0x2a);
  74   1        LCD_Write_Word(x1);
  75   1        LCD_Write_Word(x2);
  76   1        LCD_Write_Cmd(0x2b);
  77   1        LCD_Write_Word(y1);
  78   1        LCD_Write_Word(y2);
  79   1        LCD_Write_Cmd(0x2c);
  80   1      }
  81          
  82          void LCD_Init()
  83          {
  84   1        Lcd_Power.RES(off);  //复位
  85   1        Delay1ms();
  86   1        Lcd_Power.RES(on);
  87   1        Delay1ms();
  88   1        Lcd_Power.BACK(on);//打开背光
  89   1        Delay1ms();
  90   1        LCD_Write_Cmd(0x11);
  91   1        Delay1ms();
  92   1      //************* Start Initial Sequence **********// 
  93   1      //------------------------------display and color format setting--------------------------------//
  94   1      
  95   1        LCD_Write_Cmd(0X36);// Memory Access Control
  96   1        if(USE_HORIZONTAL==0)LCD_Write_Data(0x00);
  97   1        else if(USE_HORIZONTAL==1)LCD_Write_Data(0xC0);
  98   1        else if(USE_HORIZONTAL==2)LCD_Write_Data(0x70);
  99   1        else LCD_Write_Data(0xA0);
 100   1        LCD_Write_Cmd(0X3A);
 101   1        LCD_Write_Data(0X05);
 102   1      //--------------------------------ST7789S Frame rate setting-------------------------
 103   1      
 104   1        LCD_Write_Cmd(0xb2);
 105   1        LCD_Write_Data(0x0c);
 106   1        LCD_Write_Data(0x0c);
 107   1        LCD_Write_Data(0x00);
 108   1        LCD_Write_Data(0x33);
 109   1        LCD_Write_Data(0x33);
 110   1        LCD_Write_Cmd(0xb7);
 111   1        LCD_Write_Data(0x35);
 112   1        //---------------------------------ST7789S Power setting-----------------------------
 113   1      
 114   1        LCD_Write_Cmd(0xbb);
C51 COMPILER V9.57.0.0   ST7789V                                                           01/20/2022 17:48:12 PAGE 3   

 115   1        LCD_Write_Data(0x35);
 116   1        LCD_Write_Cmd(0xc0);
 117   1        LCD_Write_Data(0x2c);
 118   1        LCD_Write_Cmd(0xc2);
 119   1        LCD_Write_Data(0x01);
 120   1        LCD_Write_Cmd(0xc3);
 121   1        LCD_Write_Data(0x13);
 122   1        LCD_Write_Cmd(0xc4);
 123   1        LCD_Write_Data(0x20);
 124   1        LCD_Write_Cmd(0xc6);
 125   1        LCD_Write_Data(0x0f);
 126   1        LCD_Write_Cmd(0xca);
 127   1        LCD_Write_Data(0x0f);
 128   1        LCD_Write_Cmd(0xc8);
 129   1        LCD_Write_Data(0x08);
 130   1        LCD_Write_Cmd(0x55);
 131   1        LCD_Write_Data(0x90);
 132   1        LCD_Write_Cmd(0xd0);
 133   1        LCD_Write_Data(0xa4);
 134   1        LCD_Write_Data(0xa1);
 135   1        //--------------------------------ST7789S gamma setting------------------------------
 136   1        LCD_Write_Cmd(0xe0);
 137   1        LCD_Write_Data(0xd0);
 138   1        LCD_Write_Data(0x00);
 139   1        LCD_Write_Data(0x06);
 140   1        LCD_Write_Data(0x09);
 141   1        LCD_Write_Data(0x0b);
 142   1        LCD_Write_Data(0x2a);
 143   1        LCD_Write_Data(0x3c);
 144   1        LCD_Write_Data(0x55);
 145   1        LCD_Write_Data(0x4b);
 146   1        LCD_Write_Data(0x08);
 147   1        LCD_Write_Data(0x16);
 148   1        LCD_Write_Data(0x14);
 149   1        LCD_Write_Data(0x19);
 150   1        LCD_Write_Data(0x20);
 151   1        LCD_Write_Cmd(0xe1);
 152   1        LCD_Write_Data(0xd0);
 153   1        LCD_Write_Data(0x00);
 154   1        LCD_Write_Data(0x06);
 155   1        LCD_Write_Data(0x09);
 156   1        LCD_Write_Data(0x0b);
 157   1        LCD_Write_Data(0x29);
 158   1        LCD_Write_Data(0x36);
 159   1        LCD_Write_Data(0x54);
 160   1        LCD_Write_Data(0x4b);
 161   1        LCD_Write_Data(0x0d);
 162   1        LCD_Write_Data(0x16);
 163   1        LCD_Write_Data(0x14);
 164   1        LCD_Write_Data(0x21);
 165   1        LCD_Write_Data(0x20);
 166   1        LCD_Write_Cmd(0x29);
 167   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    620    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     21       2
   PDATA SIZE       =   ----      10
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   ST7789V                                                           01/20/2022 17:48:12 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
